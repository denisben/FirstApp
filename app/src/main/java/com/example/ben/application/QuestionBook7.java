package com.example.ben.application;

public class QuestionBook7 {

    public static String[] questions = new String [] {
            "Τμηματικός προγραμματισμός ονομάζεται η τεχνική σχεδίασης και ανάπτυξης προγραμμάτων ως ένα σύνολο από απλούστερα τμήματα προγραμμάτων. ",
            "Οταν ένα τμήμα προγράμματος έχει γραφτεί χωριστά από το υπόλοιπο πρόγραμμα χωρίς να επιτελεί ένα αυτόνομο έργο, τότε ονομάζεται υποπρόγραμμα.",
            "Κάθε υποπρόγραμμα μπορεί να έχεις πολλές εισόδους αλλά μόνο μία έξοδο. ",
            "Ενα υποπρόγραμμα μπορεί χρησιμοποιηθεί μόνο μια φορά.",
            " Μιά παράμετρος είναι μιά μεταβλητή που επιτρέπει το πέρασμα της τιμής της από ένα τμήμα προγράμματος σε ένα άλλο. ",
            "Συνάρτηση είναι ένας τύπος υποπρογράμματος που υπολογίζει και επιστρέφει μία ή περισσότερες τιμές. ",
            "Η διαδιασία είναι ένας τύπος υποπρογράμματος που μπορεί να εκτελεί μόνο βασικές λειτουργίες ενός προγράμματος. ",
            "Κάθε διαικασία η συνάρτηση μπορεί να κληθεί μόνο από το κυρίος πρόγραμμα.",
            "Οι τυπικοί παράμετροι καθορίζουν τις παράμετρους στην κλήση του υποπρογράμματος και οι πραγματικοί παράμετροι καθορίζουν τις παραμέτρους στην δήλωση του υποπρογράμματος. ",
            "Οι μεταβλητές ισχύουν μόνο τοπικά σε κάθε πρόγραμμα ή υποπρόγραμμα. ",
            "Ο αριθμός των τυπικών και πραγματικών παραμέτρων αλλά και ο τύπος τους πρέπει να είναι ίδιος. ",
            "Εμβέλεια ονομάζεται το τμήμα του προγράμματος που ισχύουν οι μεταβλητές. ",
            "Σύμφωνα με την απεριόριστη εμβέλεια ο προγραμματιστής θα πρέπει να γνωρίζει όλες τις μεταβλητές που έχουν χρησιμοποιηθεί και στα υπόλοιπα υποπρογράμματα,πράγγμα το οποίο δυσκολεύει στην συνγραφεί ενος υποπρογράμματος. ",
            "Στην περιορισμένη εμβέλεια όλες οι μεταβλητές είναι καθολικές.",
            "Στην μερικώς περιορισμένη εμβέλεια όλες οι μεταβλητές είναι τοπικές.",
            "Ο χωρισμός ενός προγράμματος σε υποπρόγραμμα προϋποθέτει την ανάλυση του αρχικού προβλήματος σε μικρότερα,απλούστερα υποπροβλήματα τα οποία μπορούν να αντιμετωπιστούν ανεξάρτητα το ένα από το άλλο",
            "Παράμετρος είναι μια μεταβλητή που εμποδίζει το πέρασμα της τιμής της από ένα τμήμα προγράμματος σε ένα άλλο ",
            "Είναι σωστό το παράδειγμα συνάρτησης",
            "Οι παράμετροι του υποπρογράμματος δεν μπορούν να έχουν το ίδιο όνομα με τις μεταβλητές του κυρίος προγράμματος",
            "Η κλήση ενός υποπρογράμματος μπορεί να γίνει μόνο στην αρχή του κυρίος προγράμματος",
            "Είναι σωστή η κλήση της συνάρτησης μέσου_όρου?",
            "Η έξοδος της συνάρτησης μπορεί να είναι μόνο μία τιμή που επιστέφεται στο πρόγραμμα η στο υποπρόγραμμα που την κάλεσε",
            "Η κλήση μιας διαδικασίας γίνεται με την εντολή 'κάλεσε'",
            "Η λίστα παραμέτρον μιας διαδικασίας μπορεί να περιέχει μια σταθερή τιμή",
            "Ολες οι συναρτήσεις μπορούν να αντικαταστηθούν από διαδικασίες"




    };

    public static int[] images = new int []{
            R.drawable.a, R.drawable.a, R.drawable.a, R.drawable.a, R.drawable.a, R.drawable.a, R.drawable.a, R.drawable.a, R.drawable.a,
            R.drawable.a, R.drawable.a, R.drawable.a, R.drawable.a, R.drawable.a, R.drawable.a,
            R.drawable.a, R.drawable.e47, R.drawable.a, R.drawable.a, R.drawable.e49, R.drawable.a, R.drawable.a, R.drawable.a, R.drawable.a, R.drawable.a

    };


    public static boolean[] answers = new boolean[]{
            true, false, false, false, true, false,false, false, false, true, true, true, true, false, false,
            true, true, true, false, false, true, true, false, true, true
    };


    public int getLength() {
        return questions.length;
    }

}


